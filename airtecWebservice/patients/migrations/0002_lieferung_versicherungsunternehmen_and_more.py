# Generated by Django 4.2.4 on 2023-09-07 10:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lieferung',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lieferung_datum', models.DateField()),
                ('lieferung_art', models.CharField(choices=[(1, 'UPS'), (2, 'DHL'), (3, 'Lieferung'), (4, 'Abholung')], max_length=1)),
                ('alternative_lieferadresse', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Versicherungsunternehmen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versicherungsunternehmen', models.CharField(max_length=100)),
                ('strasse', models.CharField(max_length=100)),
                ('postleitzahl', models.CharField(max_length=100)),
                ('stadt', models.CharField(max_length=100)),
                ('telefon', models.CharField(max_length=100)),
                ('fax_nummer', models.CharField(max_length=100)),
            ],
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='age',
            new_name='alter',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='other_information',
            new_name='andere_informationen',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='gender',
            new_name='geschlecht',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='height',
            new_name='gewicht',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='weight',
            new_name='größe',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='patient_key',
            new_name='patient_id',
        ),
        migrations.AddField(
            model_name='patient',
            name='abdruck_ort',
            field=models.CharField(blank=True, choices=[(1, 'im Labor'), (2, 'in der Klinik'), (3, 'beim Patienten')], max_length=1, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='abdruck_zeitpunkt',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='erstellungs_datum',
            field=models.DateField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='patient',
            name='gesichtstyp',
            field=models.CharField(choices=[(1, 'pyknisch'), (2, 'athletisch'), (3, 'leptosom')], default=django.utils.timezone.now, max_length=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='patient',
            name='prothese',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='prothesenträger',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Uebergabe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abholung_zeitpunkt', models.DateTimeField()),
                ('lieferung_zeitpunkt', models.DateTimeField()),
                ('zustaendiger_mitarbeiter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SensitivePatientData',
            fields=[
                ('patient_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('vorname', models.CharField(max_length=100)),
                ('nachname', models.CharField(max_length=100)),
                ('strasse', models.CharField(max_length=100)),
                ('postleitzahl', models.CharField(max_length=100)),
                ('stadt', models.CharField(max_length=100)),
                ('geburtsdatum', models.DateField()),
                ('telefon_nummer', models.CharField(max_length=100)),
                ('handy_nummer', models.CharField(max_length=100)),
                ('kv_nummer', models.CharField(max_length=100)),
                ('vo_datum', models.DateField()),
                ('kv_datum', models.DateField()),
                ('gen_datum', models.DateField()),
                ('verordner', models.CharField(max_length=100)),
                ('versicherungsunternehmen', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patients.versicherungsunternehmen')),
            ],
        ),
        migrations.CreateModel(
            name='Maske',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('masken_id', models.CharField(max_length=100, unique=True)),
                ('masken_typ', models.CharField(max_length=100)),
                ('anschluss', models.CharField(choices=[(1, '15'), (2, '22')], max_length=1)),
                ('gerätetyp', models.CharField(max_length=100)),
                ('lieferant', models.CharField(max_length=100)),
                ('druck_mbar', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('material_shore_lot', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gaensegurgeln', models.CharField(choices=[(8811, '13cm, 15'), (8812, '13cm, 22'), (8813, '15cm, 15, PV'), (8814, '20cm, 15, PV'), (8821, '20cm, 15'), (8754, 'Silikonadapter'), (1, 'sonstige')], max_length=1)),
                ('ganesegurgel_sonstige', models.CharField(blank=True, max_length=100, null=True)),
                ('tuben', models.CharField(choices=[(1, 6), (2, 6.5), (3, 8)], max_length=1)),
                ('konnektoren', models.CharField(choices=[(8721, '15 mm'), (8722, '22 mm'), (8723, 'Rückatemsperrung'), (8752, 'Doppelnippel'), (8702, 'Titrationsadapter'), (1, 'sonstige')], max_length=4)),
                ('konnektoren_sonstige', models.CharField(blank=True, max_length=100, null=True)),
                ('ausatemventil', models.CharField(choices=[(8901, 'Respironics'), (8902, 'Weinmann Sf'), (8912, 'Schalldämpfer'), (8922, 'F&P'), (8923, 'F&P Aclaim FF'), (1, 'sonstige')], max_length=4)),
                ('ausatemventil_sonstige', models.CharField(blank=True, max_length=100, null=True)),
                ('kopf_Mund_Baender', models.CharField(choices=[('8652S', 'Full-Face Band'), ('8652', 'Full-Face Band'), ('8653', 'Full-Face Band'), ('8642', 'EasyFit, 5 P."M"'), ('8154', 'Kopfband'), ('8120', 'Endlosband'), ('8132', 'Kopfband (3P.)'), ('8133', 'Kopfband (3P.)'), ('8134', 'Kopfband (3P.)'), ('8554', 'F&P Aclaim FF'), ('2', 'Kopfhaube'), ('1', 'sonstige')], max_length=5)),
                ('kopf_Mund_Baender_sonstige', models.CharField(blank=True, max_length=100, null=True)),
                ('hartschale', models.BooleanField(default=False)),
                ('lieferung', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.lieferung')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('uebergabe', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patients.uebergabe')),
            ],
        ),
    ]
